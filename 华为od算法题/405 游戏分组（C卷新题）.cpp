/*
405、 游戏分组（C卷新题）
题目描述：
部门准备举办一场王者荣耀表演赛，有10名游戏爱好者参与，分为两队，每队5人。每位参与者都有一个评分，代表着他的游戏水平。为了表演赛尽可能精彩，我们需要把10名参赛者分为实力尽量相近的两队。一队的实力可以表示为这一队5名队员的评分总和。
现在给你10名参与者的游戏水平评分，请你根据上述要求分队，最后输出这两组的实力差绝对值。
例：10名参赛者的评分分别为5 1 8 3 4 6 7 10 9 2，分组为（1 3 5 8 10）（2 4  6 7 9），两组实力差最小，差值为1。有多种分法，但实力差的绝对值最小为1。

输入描述：
10个整数，表示10名参与者的游戏水平评分。范围在[1, 10000]之间

输出描述：
1个整数，表示分组后两组实力差绝对值的最小值。

示例1
输入：
1 2 3 4 5 6 7 8 9 10
输出：
1
说明：
10名队员分成两组，两组实力差绝对值最小为1。

// 回溯

*/

#include<iostream>
#include<vector>

using namespace std;

int w[10];
int total;
int ans = 1e9; // 差距最小值
bool choose[10];

// 深度优先搜索函数
void dfs(int cnt, int cur) {
    // 当已选入5名队员时，计算当前两队的评分差距并更新最小值
    if (cnt == 5) {
        ans = min(ans, abs(total - 2 * cur));
        return;
    }

    // 遍历所有参与者，选择未被选入的队员加入当前队伍
    for (int i = 0; i < 10; i++) {
        if (choose[i]) {
            continue;
        }
        choose[i] = true;
        dfs(cnt + 1, cur + w[i]);
        choose[i] = false;
    }
}

int main() {
    // 读取输入并转为整数数组
    for (int i = 0; i < 10; i++) {
        cin >> w[i];
        total += w[i];
    }

    // 深度优先搜索
    dfs(0, 0);

    // 输出最小评分差距
    cout << ans << endl;

    return 0;
}