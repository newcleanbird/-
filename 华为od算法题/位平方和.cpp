///*
//题目
//问题描述
//把一个整数的每个数位都平方后求和，又得到一个整数，我们称这个整数为：位平方和。
//
//对新得到的整数仍然可以继续这一运算过程。
//
//比如，给定整数为4，则一系列的运算结果为：
//
//16, 37, 58, 89, …
//
//本题的要求是，已知一个整数x，求第n步的运算结果。
//
//数据格式要求：
//
//输入，两个整数x n，中间以空格分开。表示求x的第n步位平方和。其中，x，n都大于0，且小于100000。
//输出，一个整数，表示所求结果。
//
//例如，
//输入：
//4 3
//则程序应该输出：
//58
//
//再例如，
//输入：
//1314 10
//则程序应该输出：
//20
//
//资源约定：
//峰值内存消耗（含虚拟机） < 256M
//    CPU消耗 < 1000ms
//
//    请严格按要求输出，不要画蛇添足地打印类似：“请您输入…” 的多余内容。
//
//    所有代码放在同一个源文件中，调试通过后，拷贝提交该源码。
//    注意：不要使用package语句。不要使用jdk1.7及以上版本的特性。
//    注意：主类的名字必须是：Main，否则按无效代码处理。
//*/
//
//#include<iostream>
//#include<vector>
//
//using namespace std;
//
//int get_bit_sum(int x)
//{
//    int res = 0;
//    while (x != 0)
//    {
//        res += (x % 10) * (x % 10);
//        x /= 10;
//    }
//    return res;
//}
//
//int main()
//{
//    int x, n; // x的n平方和
//    cin >> x >> n;
//    while (n--)
//    {
//        x = get_bit_sum(x);
//    }
//    cout << x;
//}